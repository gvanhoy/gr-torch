/*
 * Copyright 2021 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(torch_min_max_normalize_vcvc.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(64be2c39731728373a27b57a4a2cac1b)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <torchdsp/torch_min_max_normalize_vcvc.h>
// pydoc.h is automatically generated in the build directory
#include <torch_min_max_normalize_vcvc_pydoc.h>

void bind_torch_min_max_normalize_vcvc(py::module& m)
{

    using torch_min_max_normalize_vcvc    = gr::torchdsp::torch_min_max_normalize_vcvc;


    py::class_<torch_min_max_normalize_vcvc, gr::sync_block, gr::block,
             gr::basic_block,
        std::shared_ptr<torch_min_max_normalize_vcvc>>(m, "torch_min_max_normalize_vcvc", D(torch_min_max_normalize_vcvc))

        .def(py::init(&torch_min_max_normalize_vcvc::make),
           py::arg("device_num"),
           D(torch_min_max_normalize_vcvc,make)
        )
        



        ;




}








